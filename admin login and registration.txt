from logging import root
from tkinter import*
from tkinter import ttk
from PIL import Image,ImageTk 
from tkinter import messagebox
import random
import time
import datetime
from time import strftime
import mysql.connector
def main():
 win=Tk()
 app=Login_Window(win)
 win.mainloop()
 
class Login_Window:
 def __init__(self,root):
 self.root=root
 self.root.title("Login Page")
 self.root.geometry("1550x800+0+0")
 img1 = Image.open("images/Library_Image.png")
 img1 = img1.resize((1530,800), Image.ANTIALIAS)
 
 self.photoImg1 = ImageTk.PhotoImage(img1)
 bg_lbl=Label(self.root,image=self.photoImg1)
 bg_lbl.place(x=0,y=0,width=1530,height=800)
 
 title=Label(bg_lbl,text="Library Management System",font=("times new 
roman",42,"bold"),bg="orange",fg="red")
 title.place(x=0,y=0,width=1550,height=70)
 
 frame=Frame(self.root,bg="black")
 frame.place(x=610,y=200,width=340,height=430)
 
 img1=Image.open("images/LoginIconAppl.png")
 img1=img1.resize((90,90),Image.ANTIALIAS)
 self.photoimage1=ImageTk.PhotoImage(img1)
 lblimg1=Label(image=self.photoimage1,bg="black",borderwidth=0)
 lblimg1.place(x=730,y=200,width=90,height=90)
 
 get_str=Label(frame,text="Admin Login",font=("times new
roman",20,"bold"),fg="white",bg="black")
 get_str.place(x=95,y=85)
 
 self.txtuser=StringVar()
 self.txtpass=StringVar()
 
 username=lbl=Label(frame,text="Username",font=("times new 
roman",12,"bold"),fg="white",bg="black")
 username.place(x=70,y=125)
 
 txtuser=ttk.Entry(frame,textvariable=self.txtuser,font=("times new roman",15,"bold"))
 txtuser.place(x=40,y=150,width=270)
 

 password=lbl=Label(frame,text="Password",font=("times new 
roman",12,"bold"),fg="white",bg="black")
 password.place(x=70,y=195)
 
 txtpass=ttk.Entry(frame,textvariable=self.txtpass,font=("times new 
roman",15,"bold"),show="*")
 txtpass.place(x=40,y=220,width=270)
 
 img2=Image.open("images/LoginIconAppl.png")
 img2=img2.resize((25,25),Image.ANTIALIAS)
 self.photoimage2=ImageTk.PhotoImage(img2)
 lblimg1=Label(image=self.photoimage2,bg="black",borderwidth=0)
 lblimg1.place(x=650,y=323,width=25,height=25)
 
 img3=Image.open("images/lock-512.png")
 img3=img3.resize((25,25),Image.ANTIALIAS)
 self.photoimage3=ImageTk.PhotoImage(img3)
 lblimg1=Label(image=self.photoimage3,bg="black",borderwidth=0)
 lblimg1.place(x=650,y=395,width=25,height=25)
 
 
btn_login=Button(frame,text="Login",borderwidth=3,relief=RAISED,command=self.login,c
ursor="hand2",font=("times new roman",16,"bold"),fg="white",bg="red" 
,activebackground="#B00857")
 btn_login.place(x=110,y=270,width=120,height=35)
 
 registerbtn=Button(frame,text="New User 
Register",command=self.register_window,font=("times new 
roman",10,"bold"),borderwidth=0,fg="white",bg="black",activeforeground="white",activeba
ckground="black")
 registerbtn.place(x=15,y=320,width=160)
 
 forgetbtn=Button(frame,text="Forget 
Password",command=self.forgot_password_window,font=("times new 
roman",10,"bold"),borderwidth=0,fg="white",bg="black",activeforeground="white",acttiveba
ckground="black")
 forgetbtn.place(x=10,y=340,width=160)
 
 def register_window(self):
 self.new_window=Toplevel(self.root)
 self.app=Register( self.new_window)
 
 def login(self):
 if self.txtuser.get()=="Pratik" and self.txtpass.get()=="Ketan":
 messagebox.showinfo("Success","Welcome to Library Management System...")
 self.new_window=Toplevel(self.root) 
 self.app=LibraryManagementSystem(self.new_window)
 
elif self.txtuser.get()=="" or self.txtpass.get()=="":
 messagebox.showerror("Error","all field required")
 
else:
conn=mysql.connector.connect(host="localhost",user="root",password="Ketan@16m",datab
ase="mydata")
 my_cursor=conn.cursor()
 my_cursor.execute("select * from register where email=%s and password=%s",(
 self.txtuser.get(),
self.txtpass.get()
 ))
 
 row=my_cursor.fetchone()
 if row==None:
 messagebox.showerror("Error","Inavalid Username & password")
 else:
 open_main=messagebox.askyesno("YesNo","Enter Library Management System")
 if open_main>0:
 pass
 self.new_window=Toplevel(self.root) 
 self.app=LibraryManagementSystem(self.new_window)
 else:
 if not open_main:
 return
 conn.commit()
 self.clear()
 conn.close()
 def clear(self):
 self.txtuser.set("")
 self.txtpass.set("")
 def reset_pass(self):
 if self.combo_securiy_Q.get()=="Select" or self.txt_security.get()=="" or 
self.txt_newpass=="":
 messagebox.showerror("Error","All fields are required",parent=self.root2)
 else:
 try:
 
conn=mysql.connector.connect(host="localhost",user="root",password="Ketan@16m",database="mydata")
cur=conn.cursor()
 query=("select * from register where email=%s and securityQ=%s and 
securityA=%s")
 value=(self.txtuser.get(),self.combo_securiy_Q.get(),self.txt_security.get(),)
 cur.execute(query,value)
 row=cur.fetchone()
 if row==None:
 messagebox.showerror("Error","Please select the correct security quetion/Enter 
answer",parent=self.root2)
 else:
 query=("update register set password=%s where email=%s")
 value=(self.txt_newpass.get(),self.txtuser.get())
 cur.execute(query,value)
 conn.commit() 
 conn.close()
 messagebox.showinfo("Success","Your password has been reset,Please login 
with new password",parent=self.root2)
 self.root2.destroy()
 self.txtuser.focus()
 except Exception as es:
 messagebox.showerror("Error",f"Error Due To:{str(es)}",parent=self.root2) 
 def forgot_password_window(self):
 if self.txtuser.get()=="":
 messagebox.showerror("Error","Plaese Enter the Email address to reset password")
else:
 
conn=mysql.connector.connect(host="localhost",user="root",password="Ketan@16m",datab
ase="mydata")
 my_cursor=conn.cursor()
 query=("select * from register where email=%s")
 value=(self.txtuser.get(),)
 my_cursor.execute(query,value)
 row=my_cursor.fetchone()
 if row==None:
 messagebox.showerror("My Error","Plaese enter the valid user name")
 else:
 conn.close()
 self.root2=Toplevel()
 self.root2.title("Forget Password")
 self.root2.geometry("340x450+610+200")
 self.root2.configure(bg="white")
 l=Label(self.root2,text="Forget Password",font=("times new 
roman",20,"bold"),fg="red",bg="white")
 l.place(x=0,y=10,relwidth=1)
 security_Q=Label(self.root2,text="Select Security Quetions",font=("times new 
roman",15,"bold"),bg="white",fg="black")
 security_Q.place(x=50,y=80)
 self.combo_securiy_Q=ttk.Combobox(self.root2,font=("times new 
roman",15,"bold"),state="readonly")
 self.combo_securiy_Q["values"]=("Select","Your Birth Place","Your Nick 
name","Your Pet Name")
 self.combo_securiy_Q.place(x=50,y=110,width=250)
 self.combo_securiy_Q.current(0)
security_A=Label(self.root2,text="Security Answer",font=("times new 
roman",15,"bold"),bg="white",fg="black")
 security_A.place(x=50,y=150)
 self.txt_security=ttk.Entry(self.root2,font=("times new roman",15,"bold"))
 self.txt_security.place(x=50,y=180,width=250)
 new_password=Label(self.root2,text="New Password",font=("times new 
roman",15,"bold"),bg="white",fg="black")
 new_password.place(x=50,y=220)
 self.txt_newpass=ttk.Entry(self.root2,font=("times new roman",15,"bold"))
 self.txt_newpass.place(x=50,y=250,width=250)
 btn=Button(self.root2,text="Reset",command=self.reset_pass,font=("times new 
roman",15,"bold"),fg="White",bg="green")
 btn.place(x=120,y=290,width=100)
 
class Register:
 def __init__(self,root):
 self.root=root
 self.root.title("Register")
 self.root.geometry("1600x900+0+0")
 
 self.var_fname=StringVar()
 self.var_lname=StringVar()
 self.var_contact=StringVar()
 self.var_email=StringVar()
 self.var_securityQ=StringVar()
 self.var_SecurityA=StringVar()
 self.var_pass=StringVar()
 self.var_confpass=StringVar()
self.bg=ImageTk.PhotoImage(file="images/employee_img2.jpg")
 bg_lbl=Label(self.root,image=self.bg)
 bg_lbl.place(x=0,y=0,relwidth=1,relheight=1)
 
 self.bg1=ImageTk.PhotoImage(file="images/thought-good-morning-messagesLoveSove.jpg")
 left_lbl=Label(self.root,image=self.bg1)
 left_lbl.place(x=50,y=100,width=470,height=550)
 
 frame=Frame(self.root,bg="white")
 frame.place(x=520,y=100,width=800,height=550)
 
 register_lbl=Label(frame,text="REGISTER HERE",font=("times new 
roman",20,"bold"),fg="darkgreen",bg="white")
 
 
 fname=Label(frame,text="First Name",font=("times new 
roman",15,"bold"),bg="white")
 fname.place(x=50,y=100)
 
 self.fname_entry=ttk.Entry(frame,textvariable=self.var_fname,font=("times new 
roman",15,"bold"))
 self.fname_entry.place(x=50,y=130,width=250)
 
 l_name=Label(frame,text="Last Name",font=("times new 
roman",15,"bold"),bg="white",fg="black")
 l_name.place(x=370,y=100)
 
 self.txt_lname=ttk.Entry(frame,textvariable=self.var_lname,font=("times new roman",15"bold"))
self.txt_lname.place(x=370,y=130,width=250)
 contact=Label(frame,text="Contact No",font=("times new 
roman",15,"bold"),bg="white",fg="black")
 contact.place(x=50,y=170)
 self.txt_contact=ttk.Entry(frame,textvariable=self.var_contact,font=("times new 
roman",15,"bold"))
 self.txt_contact.place(x=50,y=200,width=250)
 email=Label(frame,text="Email",font=("times new 
roman",15,"bold"),bg="white",fg="black")
 email.place(x=370,y=170)
 self.txt_email=ttk.Entry(frame,textvariable=self.var_email,font=("times new 
roman",15,"bold"))
 self.txt_email.place(x=370,y=200,width=250)
 security_Q=Label(frame,text="Select Security Quetions",font=("times new 
roman",15,"bold"),bg="white",fg="black")
 security_Q.place(x=50,y=240)
 
self.combo_securiy_Q=ttk.Combobox(frame,textvariable=self.var_securityQ,font=("times 
new roman",15,"bold"),state="readonly")
 self.combo_securiy_Q["values"]=("Select","Your Birth Place","Your Nick name","Your 
Blood Group")
 self.combo_securiy_Q.place(x=50,y=270,width=250)
 self.combo_securiy_Q.current(0)
 security_A=Label(frame,text="Security Answer",font=("times new 
roman",15,"bold"),bg="white",fg="black")
 security_A.place(x=370,y=240)
 self.txt_security=ttk.Entry(frame,textvariable=self.var_SecurityA,font=("times new 
roman",15,"bold"))
 self.txt_security.place(x=370,y=270,width=250)
 44
 pswd=Label(frame,text="Password ",font=("times new 
roman",15,"bold"),bg="white",fg="black")
 pswd.place(x=50,y=310)
 self.txt_pswd=ttk.Entry(frame,textvariable=self.var_pass,font=("times new roman",15,"bold"))
 self.txt_pswd.place(x=50,y=340,width=250)
 confirm_pswd=Label(frame,text="Confirm Password",font=("times new 
roman",15,"bold"),bg="white",fg="black")
 confirm_pswd.place(x=370,y=310)
 self.txt_confirm_pswd=ttk.Entry(frame,textvariable=self.var_confpass,font=("times new 
roman",15,"bold"))
 self.txt_confirm_pswd.place(x=370,y=340,width=250)
 self.var_check=IntVar()
 self.checkbtn=Checkbutton(frame,variable=self.var_check,text="I Agree The Terms & 
Conditions",bg='white',font=("times new roman",12,"bold"),onvalue=1,offvalue=0)
 self.checkbtn.place(x=50,y=380)
 img=Image.open("images/register-now-button1.jpg")
 img=img.resize((200,55),Image.ANTIALIAS)
 self.photoimage=ImageTk.PhotoImage(img)
 
b1=Button(frame,image=self.photoimage,command=self.register_data,borderwidth=0,cursor
="hand2",font=("times new roman",15,"bold"),fg="white")
 b1.place(x=10,y=420,width=200)
 img1=Image.open("images/loginpng.png")
 img1=img1.resize((200,45),Image.ANTIALIAS)
 self.photoimage1=ImageTk.PhotoImage(img1)
 
b1=Button(frame,image=self.photoimage1,command=self.return_login,borderwidth=0,cursor
="hand2",font=("times new roman",15,"bold"),fg="white")
b1.place(x=330,y=420,width=200)
 def register_data(self):
 if self.var_fname.get()=="" or self.var_email.get()=="" or 
self.var_securityQ.get()=="Select":
 messagebox.showerror("Error","All fields are required",parent=self.root)
 elif self.var_pass.get()!=self.var_confpass.get():
 messagebox.showerror("Error","password & confirm password must be 
same",parent=self.root)
 elif self.var_check.get()==0:
 messagebox.showerror("Error","Plaese agree our terms ane 
condition",parent=self.root)
 else:
 
conn=mysql.connector.connect(host="localhost",user="root",password="Ketan@16m",datab
ase="mydata")
 my_cursor=conn.cursor()
 query=("select * from register where email=%s")
 value=(self.var_email.get(),)
 my_cursor.execute(query,value)
 row=my_cursor.fetchone()
 if row!=None:
 messagebox.showerror("Error","User already exist,plaese try another 
email",parent=self.root)
 else:
 my_cursor.execute("insert into register values(%s,%s,%s,%s,%s,%s,%s)",(
 self.var_fname.get(),
 self.var_lname.get(),
 self.var_contact.get(),
 self.var_email.get()
self.var_securityQ.get(),
 self.var_SecurityA.get(),
 self.var_pass.get()
 ))
 conn.commit()
 conn.close()
 messagebox.showinfo("Success","Register Successfully")
 def return_login(self):
 self.root.destroy()